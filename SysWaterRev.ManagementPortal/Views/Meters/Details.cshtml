@model MeterViewModel
@{
    ViewBag.Title = "Meter Details";
}
@section ContentHeader{
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Meters
            <small>Details</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-group"></i>Meters</a></li>
            <li class="active">Meter Details</li>
        </ol>
    </section>
}
<section class="content">
    <div class="row">
        <div class="col-md-6">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.MeterSerialNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MeterSerialNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MeterNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MeterNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DateCreated)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DateCreated)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CreatedBy)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.LastEditedBy)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.LastEditedBy)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.LastEditDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.LastEditDate)
                </dd>
            </dl>
            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.MeterId }, htmlAttributes: new { @class = "btn btn-default" })
                @Html.ActionLink("Back to List", "Index", new { }, htmlAttributes: new { @class = "btn btn-default" })
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @(Html.Kendo().Grid<ReadingViewModel>()
      .Name("readings")
      .Columns(columns =>
      {
          columns.Bound(p => p.MeterId).Hidden(true);
          columns.Bound(p => p.ReadingId).Hidden(true);
          columns.Bound(p => p.ReadingValue);
          columns.Bound(p => p.Latitude);
          columns.Bound(p => p.Longitude);
          columns.Bound(p => p.CreatedBy);
          columns.Bound(p => p.EmployeeFullName);
          columns.Bound(p => p.DateCreated);
          columns.Command(c => c.Custom("View Details").Click("showReadingDetails"));
      })
      .Pageable()
      .Sortable()
      .Scrollable()
      .Filterable()
      .DataSource(dataSource => dataSource
          .Ajax()
                      .Read(x => x.Action("GetReadingsForMeter", "Meters", new { meterId = Model.MeterId }))
                      .Model(x => x.Id(z => z.MeterId))
                      .Sort(z => z.Add(t => t.DateCreated))
          )
            )
        </div>
    </div>
</section>



<script type="text/javascript">
    function showReadingDetails(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '/Readings/Details/' + dataItem.ReadingId;
    }
</script>