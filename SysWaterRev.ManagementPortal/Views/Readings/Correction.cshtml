@model ReadingViewModel

@{
    ViewBag.Title = "Correct Reading";
}

<h2>Correct Reading</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Reading</h4>
        <hr />
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.ReadingId)
        <div class="form-group">
            @Html.LabelFor(model => model.ReadingValue, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReadingValue, new {htmlAttributes = new {@class = "form-control",@readonly="readonly"}})
                @Html.ValidationMessageFor(model => model.ReadingValue, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CorrectionValue, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorrectionValue, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CorrectionValue, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Correct" class="btn btn-default btn-success" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}