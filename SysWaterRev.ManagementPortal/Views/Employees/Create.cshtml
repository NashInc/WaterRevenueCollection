@model EmployeeViewModel
@{
    ViewBag.Title = "Create Customer";
}
<h2>Create Customer</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Identification, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Identification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Identification, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeGender, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.EmployeeGender, htmlAttributes: new { @class = "form-control dropdown" }, optionLabel: "Choose Gender...")
                @Html.ValidationMessageFor(model => model.EmployeeGender, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (User.IsInRole(SimpleRevCollectionRoles.Administrators))
        {
            <div class="form-group">
                <label class="control-label col-md-2">Roles</label>
                <div class="col-md-10">
                    @(Html.Kendo().MultiSelect()
                              .Name("SelectedRoles")
                              .Placeholder("Select Role...")
                              .BindTo(SimpleRevCollectionRoles.AllEmployeeRoles)
                              .Value("Employees")
                              .Animation(true)
                              .Placeholder("Choose Roles...")
                    )
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <label class="control-label col-md-2">Roles</label>
                <div class="col-md-10">
                    <div>
                        @(Html.Kendo().MultiSelect()
                              .Name("SelectedRoles")
                              .Placeholder("Select Role...")
                              .BindTo(SimpleRevCollectionRoles.EmployeeRoles)
                              .Placeholder("Choose Roles...")
                              .Animation(true)
                              .Value("Employees"))
                    </div>
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default btn-success" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index", htmlAttributes: new { @class = "btn btn-default" }, routeValues: new { })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}