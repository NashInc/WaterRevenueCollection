@using System.Web.UI.WebControls
@model ChargeViewModel

@{
    ViewBag.Title = "Edit Charge";
}
<h2>Edit Charge</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Charge</h4>
        <hr />
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.ChargeId)

        <div class="form-group">
            @Html.LabelFor(model => model.StartRange, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartRange, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StartRange, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndRange, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndRange, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EndRange, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChargeScheduleId, "ChargeScheduleId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="demo-section">
                    @(Html.Kendo().MultiSelect()
                          .Name("SelectChargeSchedule")
                          .Placeholder("Select Schedule...")
              .DataTextField("ChargeScheduleName")
              .DataValueField("ChargeScheduleId")
                          .Animation(true)
                          .DataSource(builder => builder.Read("ReadChargeSchedules", "ChargeSchedules"))
                          .Enable(true)
                          .Value("Employees"))
                </div>
                @Html.ValidationMessageFor(model => model.ChargeScheduleId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index",new {}, new {@class="btn btn-default"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}