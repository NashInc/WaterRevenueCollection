@model ChargeScheduleViewModel
@{
    ViewBag.Title = "Charge Details";
    var activation = string.Empty;
    if (Model.IsActive)
    {
        activation = "disabled";
    }
}
@section ContentHeader{
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Charge Schedule
            <small>Details</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-money"></i>Charge Schedule</a></li>
            <li class="active">Details</li>
        </ol>
    </section>
}
<section class="content">
    <div class="row">
        <div class="col-md-6">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ChargeScheduleName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ChargeScheduleName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.IsActive)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.IsActive)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ActivatedBy)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ActivatedBy)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DateCreated)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DateCreated)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CreatedBy)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.LastEditedBy)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.LastEditedBy)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.LastEditDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.LastEditDate)
                </dd>
            </dl>

            <p>
                <div class="btn-group">
                    <div class="form-actions no-color">
                        @using (Html.BeginForm("ActivateChargeSchedule", "ChargeSchedules", FormMethod.Post, htmlAttributes: new { @class = activation }))
                        {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.ChargeScheduleId)
                        <input type="submit" value="Activate Schedule" class="btn btn-default btn-success @activation" />
                        }
                    </div>
                    @Html.ActionLink("Edit", "Edit", new { id = Model.ChargeScheduleId }, new { @class = "btn btn-default" })

                    @Html.ActionLink("Back to List", "Index", htmlAttributes: new { @class = "btn btn-default" }, routeValues: new { })
                </div>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @(Html.Kendo().Grid<ChargeViewModel>()
              .Name("charges")
              .Selectable(z => z.Enabled(true).Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
              .Scrollable(z => z.Enabled(true).Virtual(true))
              .Sortable(z => z.AllowUnsort(true).Enabled(true).SortMode(GridSortMode.MultipleColumn))
              .Columns(columns =>
              {
                  columns.Bound(column => column.ChargeId).Hidden(true);
                  columns.Bound(column => column.StartRange);
                  columns.Bound(column => column.EndRange);
                  columns.Bound(column => column.UnitPrice);
                  columns.Bound(column => column.DateCreated);
                  columns.Bound(column => column.CreatedBy);
              })
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .Model(z => z.Id(x => x.ChargeId))
                  .Read(actionName: "GetChargesForSchedule", controllerName: "ChargeSchedules", routeValues: new { ChargeScheduleId = Model.ChargeScheduleId })

              )
            )
        </div>
    </div>
</section>