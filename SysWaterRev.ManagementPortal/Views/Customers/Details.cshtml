@model CustomerViewModel

@{
    ViewBag.Title = "Customer Details";
}
@section ContentHeader{
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Customers
            <small>Details</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-group"></i>Customers</a></li>
            <li class="active">Customer Details</li>
        </ol>
    </section>
}
<section class="content">
    <div class="row">
        <div class="col-md-6">           
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.FirstName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MiddleName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MiddleName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Surname)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Surname)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.PhoneNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Identification)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Identification)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EmailAddress)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EmailAddress)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.UserGender)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.UserGender)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CustomerNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CustomerNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DateCreated)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DateCreated)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CreatedBy)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.LastEditedBy)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.LastEditedBy)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.LastEditDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.LastEditDate)
                </dd>
            </dl>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.CustomerId }, new { @class = "btn btn-default " })
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-default" })
        </p>   
        </div>
    </div>    
    <div class="row">
        <div class="col-md-12">
            <h2>Meters Owned</h2>
            @(Html.Kendo().Grid<MeterViewModel>()
              .Name("meters")
              .Columns(columns =>
              {
                  columns.Bound(p => p.MeterId).Hidden(true);
                  columns.Bound(p => p.CustomerId).Hidden(true);
                  columns.Bound(p => p.MeterNumber);
                  columns.Bound(p => p.MeterSerialNumber);
                  columns.Bound(p => p.ReadingsForMeter);
                  columns.Bound(p => p.DateCreated);
                  columns.Command(c => c.Custom("View Details").Click("showMeterDetails"));
              })
              .Pageable()
              .Selectable(z => z.Enabled(true).Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
              .Sortable()
              .Scrollable()
              .Filterable()
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .Read(x => x.Action("GetMetersForCustomer", "Customers", new { Model.CustomerId }))
                  .Model(x => x.Id(z => z.MeterId))
                  .Sort(z => z.Add(t => t.DateCreated))
              )
            )
            <script type="text/javascript">
                function showMeterDetails(e) {
                    e.preventDefault();
                    var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
                    window.location.href = '/Meters/Details/' + dataItem.MeterId;
                }
            </script>
        </div>    
        </div>
</section>